/*
 * The Self-* Storage System Project
 * Copyright (c) 2011, Carnegie Mellon University.
 * All rights reserved.
 * http://www.pdl.cmu.edu/  (Parallel Data Lab at Carnegie Mellon)
 *
 * This software is being provided by the copyright holders under the
 * following license. By obtaining, using and/or copying this software,
 * you agree that you have read, understood, and will comply with the
 * following terms and conditions:
 *
 * Permission to reproduce, use, and prepare derivative works of this
 * software is granted provided the copyright and "No Warranty" statements
 * are included with all reproductions and derivative works and associated
 * documentation. This software may also be redistributed without charge
 * provided that the copyright and "No Warranty" statements are included
 * in all redistributions.
 *
 * NO WARRANTY. THIS SOFTWARE IS FURNISHED ON AN "AS IS" BASIS.
 * CARNEGIE MELLON UNIVERSITY MAKES NO WARRANTIES OF ANY KIND, EITHER
 * EXPRESSED OR IMPLIED AS TO THE MATTER INCLUDING, BUT NOT LIMITED
 * TO: WARRANTY OF FITNESS FOR PURPOSE OR MERCHANTABILITY, EXCLUSIVITY
 * OF RESULTS OR RESULTS OBTAINED FROM USE OF THIS SOFTWARE. CARNEGIE
 * MELLON UNIVERSITY DOES NOT MAKE ANY WARRANTY OF ANY KIND WITH RESPECT
 * TO FREEDOM FROM PATENT, TRADEMARK, OR COPYRIGHT INFRINGEMENT.
 * COPYRIGHT HOLDERS WILL BEAR NO LIABILITY FOR ANY USE OF THIS SOFTWARE
 * OR DOCUMENTATION.
 */

/*
 * facility names.
 *
 * DO NOT EDIT-- this file is automatically generated.
 */

#ifndef _MLOGFACS_H_
#define _MLOGFACS_H_

#include "mlog.h"    /* for MLOG_ defines */

#ifdef MLOG_FACSARRAY
static const char *mlog_facsarray[] = {
    "MLOG",          /* 0 -- MLOG default fac */
    "PLFS",          /* 1 */
    "FUSE",          /* 2 */
    "MPI",           /* 3 */
    0,               /* 4 */
};
#endif /* MLOG_FACSARRAY */

/*
 * standard facility defines
 */
#define MLOGFAC_PLFS      1 /* General PLFS */
#define MLOGFAC_FUSE      2 /* PLFS FUSE */
#define MLOGFAC_MPI       3 /* PLFS MPI */

/*
 * General PLFS MLOG levels
 */
#define PLFS_EMERG       (1 | MLOG_EMERG)
#define PLFS_ALERT       (1 | MLOG_ALERT)
#define PLFS_CRIT        (1 | MLOG_CRIT)
#define PLFS_ERR         (1 | MLOG_ERR)
#define PLFS_WARN        (1 | MLOG_WARN)
#define PLFS_NOTE        (1 | MLOG_NOTE)
#define PLFS_INFO        (1 | MLOG_INFO)
#define PLFS_DBG         (1 | MLOG_DBG)
#define PLFS_DBG0        (1 | MLOG_DBG0)
#define PLFS_DAPI         PLFS_DBG0
#define PLFS_DBG1        (1 | MLOG_DBG1)
#define PLFS_DINTAPI      PLFS_DBG1
#define PLFS_DBG2        (1 | MLOG_DBG2)
#define PLFS_DCOMMON      PLFS_DBG2
#define PLFS_DBG3        (1 | MLOG_DBG3)
#define PLFS_DRARE        PLFS_DBG3

/*
 * PLFS FUSE MLOG levels
 */
#define FUSE_EMERG       (2 | MLOG_EMERG)
#define FUSE_ALERT       (2 | MLOG_ALERT)
#define FUSE_CRIT        (2 | MLOG_CRIT)
#define FUSE_ERR         (2 | MLOG_ERR)
#define FUSE_WARN        (2 | MLOG_WARN)
#define FUSE_NOTE        (2 | MLOG_NOTE)
#define FUSE_INFO        (2 | MLOG_INFO)
#define FUSE_DBG         (2 | MLOG_DBG)
#define FUSE_DBG0        (2 | MLOG_DBG0)
#define FUSE_DAPI         FUSE_DBG0
#define FUSE_DBG1        (2 | MLOG_DBG1)
#define FUSE_DINTAPI      FUSE_DBG1
#define FUSE_DBG2        (2 | MLOG_DBG2)
#define FUSE_DCOMMON      FUSE_DBG2
#define FUSE_DBG3        (2 | MLOG_DBG3)
#define FUSE_DRARE        FUSE_DBG3

/*
 * PLFS MPI MLOG levels
 */
#define MPI_EMERG        (3 | MLOG_EMERG)
#define MPI_ALERT        (3 | MLOG_ALERT)
#define MPI_CRIT         (3 | MLOG_CRIT)
#define MPI_ERR          (3 | MLOG_ERR)
#define MPI_WARN         (3 | MLOG_WARN)
#define MPI_NOTE         (3 | MLOG_NOTE)
#define MPI_INFO         (3 | MLOG_INFO)
#define MPI_DBG          (3 | MLOG_DBG)
#define MPI_DBG0         (3 | MLOG_DBG0)
#define MPI_DAPI          MPI_DBG0
#define MPI_DBG1         (3 | MLOG_DBG1)
#define MPI_DINTAPI       MPI_DBG1
#define MPI_DBG2         (3 | MLOG_DBG2)
#define MPI_DCOMMON       MPI_DBG2
#define MPI_DBG3         (3 | MLOG_DBG3)
#define MPI_DRARE         MPI_DBG3

#endif /* _MLOGFACS_H_ */
