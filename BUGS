OPEN:

7) I've seen a crash with a core backtrace that says something about ld 
loading.

6) There may be something weird happening when we do big N-N workloads.  
Need to test this.  Maybe especially if it is layered.

8) Need to add mapping in the ad_plfs layer so that users only know about
frontends and plfs-fuse and plfs-adio both transparently use the backend.
we'll need an /etc/plfsrc file or something.

CLOSED:

1) doing a cvs co often fails with:
cvs [checkout aborted]: cannot rename file CVS/Entries.Backup to CVS/Entries:
Function not implemented This is because PLFS currently cowardly refuses to
rename an open file.  CVS only sometimes runs into this problem; when it
happens you can just cvs co over and over again until finally it works.
RESOLVED:  I think I fixed this.  I put some code in rename to rename open
files, and I wrote a test, and I tried the cvs stuff and it hasn't broke!  It
did break again and I fixed it again.  Check the ChangeLog of 0.1.5.

2) cd /users/johnbent/Testing/openmpi-1.3.3/ompi/mca/io/romio/romio/test
   mpirun -np 1 ./large_file -fname /tmp/bar
   mpirun -np 1 ./large_file -fname plfs:/tmp/bar
This fails because there is a file in the place where PLFS wants to make
a container.  RESOLVED: when this error is seen, unlink the file, and try
again.

3) bad reference counting in the Plfs_fd structure.  See the ChangeLog for 
0.1.5

4) truncate in the Container was removing other thread's open file handles.
See the ChangeLog of 0.1.5

5) We seem to be having a problem again where the unlink fails and we
have to do silly rename.  I think this is related to the change in
container identification from SUID bit to access file.  Now we create the
access file in the temp before the rename.  When the rename fails we 
try to unlink the directory but can't since the access file is in there.
In the time I took to write this, I could have fixed the bug....

9) Need to add a version dropping so that we can make sure we're backward
compatible.  this will be even more important when we add the metadata
distribution layer which has the potential to really confuse backward
compatibility
